@import "variables.less";
@import "mixins.less";
//@import "theme.less";

// Reset the box-sizing
* {
  .box-sizing(border-box);
}
*:before,
*:after {
  .box-sizing(border-box);
}

html {
  font-family: sans-serif; // 1
  font-size: 10px;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
}

body {
  margin: 0;
  font-family: @font-family-base;
  font-size: @font-size-base;
  line-height: @line-height-base;
  color: @text-color;
  background-color: @body-bg;
}

// // //
// use some styles from normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css
// // //

//// Improve readability of focused elements when they are also in an
//// active/hover state.
//a:active,
//a:hover {
//  outline: 0;
//}

// Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
b,
strong {
  font-weight: bold;
}

//// Address variable `h1` font-size and margin within `section` and `article`
//// contexts in Firefox 4+, Safari, and Chrome.
//h1 {
//  font-size: 2em;
//  margin: 0.67em 0;
//}

// Address inconsistent and variable font size in all browsers.
small {
  font-size: 80%;
}

//// Address differences between Firefox and other browsers.
////
//hr {
//  box-sizing: content-box;
//  height: 0;
//}

//// Contain overflow in all browsers.
//pre {
//  overflow: auto;
//}

//// Address odd `em`-unit font size rendering in all browsers.
//code,
//kbd,
//pre,
//samp {
//  font-family: monospace, monospace;
//  font-size: 1em;
//}

// 1. Correct color not being inherited.
// 2. Correct font properties not being inherited.
// 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
button,
input,
optgroup,
select,
textarea {
  color: inherit; // 1
  font: inherit; // 2
  margin: 0; // 3
}

// Address inconsistent `text-transform` inheritance for `button` and `select`.
// All other form control elements do not inherit `text-transform` values.
// Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
// Correct `select` style inheritance in Firefox.
button,
select {
  text-transform: none;
}

//// 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
////    and `video` controls.
//// 2. Correct inability to style clickable `input` types in iOS.
//// 3. Improve usability and consistency of cursor style between image-type
////    `input` and others.
//button,
//html input[type="button"], // 1
//input[type="reset"],
//input[type="submit"] {
//  -webkit-appearance: button; // 2
//  cursor: pointer; // 3
//}

//// Re-set default cursor for disabled elements.
//button[disabled],
//html input[disabled] {
//  cursor: default;
//}

// Remove inner padding and border in Firefox 4+.
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

// Address Firefox 4+ setting `line-height` on `input` using `!important` in
// the UA stylesheet.
input {
  line-height: normal;
}

//// It's recommended that you don't attempt to style these elements.
//// Firefox's implementation doesn't respect box-sizing, padding, or width.
//// 1. Address box sizing set to `content-box` in IE 8/9/10.
//// 2. Remove excess padding in IE 8/9/10.
//input[type="checkbox"],
//input[type="radio"] {
//  box-sizing: border-box; // 1
//  padding: 0; // 2
//}

//// Fix the cursor style for Chrome's increment/decrement buttons. For certain
//// `font-size` values of the `input`, it causes the cursor style of the
//// decrement button to change from `default` to `text`.
//input[type="number"]::-webkit-inner-spin-button,
//input[type="number"]::-webkit-outer-spin-button {
//  height: auto;
//}

////
//// Define consistent border, margin, and padding.
////
//fieldset {
//  border: 1px solid #c0c0c0;
//  margin: 0 2px;
//  padding: 0.35em 0.625em 0.75em;
//}


// // // 
// taken and modfied from bootstrao 3.3.7
// // //

// Reset fonts for relevant elements
input,
button,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

//hr {
//  margin-top:    @line-height-computed;
//  margin-bottom: @line-height-computed;
//  border: 0;
//  border-top: 1px solid @hr-border;
//}

// Only display content to screen readers
//
// See: http://a11yproject.com/posts/how-to-hide-content

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}

//h1, h2, h3, h4, h5, h6,
//.h1, .h2, .h3, .h4, .h5, .h6 {
h1, h2, h3, h4, h5, h6 {
  font-family: @headings-font-family;
  font-weight: @headings-font-weight;
  line-height: @headings-line-height;
  color: @headings-color;

  //small,
  //.small {
  small {
    font-weight: normal;
    line-height: 1;
    color: @headings-small-color;
  }
}

//h1, .h1,
//h2, .h2,
//h3, .h3 {
h1, h2, h3 {
  margin-top: @line-height-computed;
  margin-bottom: (@line-height-computed / 2);

  //small,
  //.small {
  small {
    font-size: 65%;
  }
}
//h4, .h4,
//h5, .h5,
//h6, .h6 {
h4, h5, h6 {
  margin-top: (@line-height-computed / 2);
  margin-bottom: (@line-height-computed / 2);

  //small,
  //.small {
  small {
    font-size: 75%;
  }
}

h1, .h1 { font-size: @font-size-h1; }
h2, .h2 { font-size: @font-size-h2; }
h3, .h3 { font-size: @font-size-h3; }
h4, .h4 { font-size: @font-size-h4; }
h5, .h5 { font-size: @font-size-h5; }
h6, .h6 { font-size: @font-size-h6; }

p {
  margin: 0 0 (@line-height-computed / 2);
}

small,
.small {
  font-size: floor((100% * @font-size-small / @font-size-base));
}

// Make range inputs behave like textual form controls
//input[type="range"] {
//  display: block;
//  //width: 100%;
//}

//button,
//.btn {
button {
  display: inline-block;
  margin-bottom: 0; // For input.btn
  font-weight: @btn-font-weight;
  text-align: center;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid transparent;
  white-space: nowrap;
  .button-size(@padding-base-vertical; @padding-base-horizontal; @font-size-base; @line-height-base; @btn-border-radius-base);
  .user-select(none);

  &,
  &:active,
  &.active {
    &:focus,
    &.focus {
      .tab-focus();
    }
  }

  &:hover,
  &:focus,
  &.focus {
    color: @btn-default-color;
    text-decoration: none;
  }

  &:active,
  &.active {
    outline: 0;
    background-image: none;
    box-shadow: inset 0 3px 5px rgba(0,0,0,.125);
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    cursor: @cursor-disabled;
    opacity: .65;
    box-shadow: none;
  }

  a& {
    &.disabled,
    fieldset[disabled] & {
      pointer-events: none; // Future-proof disabling of clicks on `<a>` elements
    }
  }
}

//.btn-default {
//.btn,
button {
  .button-variant(@btn-default-color; @btn-default-bg; @btn-default-border);
}

.btn-lg {
  // line-height: ensure even-numbered height of button next to large input
  .button-size(@padding-large-vertical; @padding-large-horizontal; @font-size-large; @line-height-large; @btn-border-radius-large);
}
.btn-sm {
  // line-height: ensure proper height of button next to small input
  .button-size(@padding-small-vertical; @padding-small-horizontal; @font-size-small; @line-height-small; @btn-border-radius-small);
}
.btn-xs {
  .button-size(@padding-xs-vertical; @padding-xs-horizontal; @font-size-small; @line-height-small; @btn-border-radius-small);
}

///

//.btn,
button {
  border-width: 2px;
  text-shadow: 0 -1px 0 rgba(0,0,0,.2);
  box-shadow: inset 0 1px 0 rgba(255,255,255,.15), 0 1px 1px rgba(0,0,0,.075);
  
  // Reset the shadow
  &:active,
  &.active {
    background-image: none;
    //box-shadow: inset 0 3px 5px rgba(0,0,0,.125);
    box-shadow: none;
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    box-shadow: none;
  }

  .badge {
    text-shadow: none;
  }
}

/// /// ///

// Labels

.label-variant(@color) {
  background-color: @color;

  &[href] {
    &:hover,
    &:focus {
      background-color: darken(@color, 10%);
    }
  }
}

//
// Labels
// --------------------------------------------------

.label {
  display: inline;
  padding: .2em .6em .3em;
  font-size: 75%;
  font-weight: bold;
  //line-height: 1;
  color: @label-color;
  text-align: center;
  white-space: nowrap;
  vertical-align: baseline;
  border-radius: .25em;

  // Add hover effects, but only for links
  a& {
    &:hover,
    &:focus {
      color: @label-link-hover-color;
      text-decoration: none;
      cursor: pointer;
    }
  }

  // Empty labels collapse automatically (not available in IE8)
  &:empty {
    display: none;
  }

  // Quick fix for labels in buttons
  .btn & {
    position: relative;
    top: -1px;
  }
}

// Colors
// Contextual variations (linked labels get darker on :hover)

.label-default {
  .label-variant(@label-default-bg);
}

.label-primary {
  .label-variant(@label-primary-bg);
}

.label-success {
  .label-variant(@label-success-bg);
}

.label-info {
  .label-variant(@label-info-bg);
}

.label-warning {
  .label-variant(@label-warning-bg);
}

.label-danger {
  .label-variant(@label-danger-bg);
}

//////

input[type="text"] {
  //width: 100%;
  height: @input-height-base; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  padding: @padding-base-vertical @padding-base-horizontal;
  font-size: @font-size-base;
  line-height: @line-height-base;
  color: @input-color;
  background-color: @input-bg;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid @input-border;
  border-radius: @input-border-radius; // Note: This has no effect on <select>s in some browsers, due to the limited stylability of <select>s in CSS.
  box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
}

@import "input-range.less";

/////
.clearfix() {
  &:before,
  &:after {
    content: " "; // 1
    display: table; // 2
  }
  &:after {
    clear: both;
  }
}

.clearfix {
  .clearfix();
}
//.center-block {
//  .center-block();
//}
//.pull-right {
//  float: right !important;
//}
//.pull-left {
//  float: left !important;
//}

.container {
  margin-right: auto;
  margin-left: auto;
  padding-left:  floor((@grid-gutter-width / 2));
  padding-right: ceil((@grid-gutter-width / 2));

  @media (min-width: @screen-sm-min) {
    width: @container-sm;
  }
  @media (min-width: @screen-md-min) {
    width: @container-md;
  }
  //@media (min-width: @screen-lg-min) {
  //  width: @container-lg;
  //}
}

h1, h2, h3, h4, h5, h6 {
    color: @gray-light;
}

.main-title {
    text-align: center;
    //color: @gray-light;
    margin-bottom: @line-height-computed;
    @media (max-width: @screen-sm-max) {
        font-size: 7vw;
    }
}

#mutable-cmd-box {
    margin: 3em auto 2em;
}

#status-box {
    text-align: right;
    //position: relative;
}

#status-box-inner {
    //position: absolute;
    //right: 0;
}

#stati-bt {
    margin-left: 1em;
    margin-top: -2px;
    vertical-align: baseline;
}

.substatus {
    margin: 1em 0;
    font-size: 1.4em;
    cursor: pointer;
}
.status-txt {
    //font-weight: bold;
    //padding: 0.5em 0.7em 0.7em 0.5em;
    //margin: 0.3em;
    .label();
}

big.status-txt {
    .h2();
}

.status-ok {
    //background-color: #5CBF00;
    //color: #fff;
    .label-variant(@label-success-bg)
}

.status-warning {
    //background-color: #ED5A00;
    //color: #000;
    .label-variant(@label-warning-bg)
}

.status-alert {
    .label-variant(@label-danger-bg)
}

.status-cbox {
  vertical-align: middle;
  margin-left: 1em;
}

.responses-box {
    //margin-top: 3.6em;
    
    //h5 {
    //    color: @gray-light;
    //}
}

#responses-textarea {
    width: 100%;
    max-width: 50em;
    height: 8em;
    padding: 0.3em 0.5em;
    background: @gray-dark;
    border: 2px solid black;
    color: @gray-lighter;
}

.big-bt {
  .btn-lg();
  font-size: 1.8em;
  width: 100%;
  margin-top: 1em;
}

.cmd-box {
    margin: 1.5em 0;
}

.cmd-slidebox  {
  .clearfix();
}

.cmd-slidebox .cmd-bt {
    float: left;
}

.cmd-slidebox label {
    margin-left: 8em;
    display: block;
    //width: 100%;
}

.cmd-slidebox .cmd-slider {
    //width: 100%;
}

.cmd-color-bt,
.color-bt {
    .btn-lg();
    margin-bottom: 0.4em;
    margin-right: 0.2em;
}

//.cmb-bt-colorbox,
.color-bt-cbox {
    display: inline-block;
    width: 2em;
    //height: @line-height-computed;
    line-height: @line-height-large;
}

.bgled-black {
    background-color: @ledcolor-black;
}
.bgled-white {
    background-color: @ledcolor-white;
}
.bgled-purple {
    background-color: @ledcolor-purple;
}
.bgled-orange {
    background-color: @ledcolor-orange;
}
.bgled-red {
    background-color: @ledcolor-red;
}
.bgled-yellow {
    background-color: @ledcolor-yellow;
}
.bgled-green {
    background-color: @ledcolor-green;
}
.bgled-blue {
    background-color: @ledcolor-blue;
}

.bkcolor-bt-cbox {
    display: inline-block;
    vertical-align: bottom;
    width: 0;
    height: 0;
    border: 1em solid black;
    border-top-width: 0.7em;
    border-bottom-width: 0.7em;
}

.bkled-white {
    border-right-color: @ledcolor-white;
    border-bottom-color: @ledcolor-white;
}
.bkled-purple {
    border-right-color: @ledcolor-purple;
    border-bottom-color: @ledcolor-purple;
}
.bkled-orange {
    border-right-color: @ledcolor-orange;
    border-bottom-color: @ledcolor-orange;
}
.bkled-red {
    border-right-color: @ledcolor-red;
    border-bottom-color: @ledcolor-red;
}
.bkled-yellow {
    border-right-color: @ledcolor-yellow;
    border-bottom-color: @ledcolor-yellow;
}
.bkled-green {
    border-right-color: @ledcolor-green;
    border-bottom-color: @ledcolor-green;
}
.bkled-blue {
    border-right-color: @ledcolor-blue;
    border-bottom-color: @ledcolor-blue;
}


@import "color-selector.less";
